{"componentChunkName":"component---src-templates-post-index-tsx","path":"/gerer-etat-react-usestate-usereducer-contextapi/","result":{"data":{"wpPost":{"id":"cG9zdDo3MTc=","title":"Gérer l’État dans React : Guide sur useState, useReducer et le Context API","content":"\n<h2 class=\"wp-block-heading\">1. Gérer l&#8217;État Simple avec useState</h2>\n\n\n\n<p>Dans React, l&#8217;état (ou &#8220;state&#8221; en anglais) est une manière de stocker des données qui peuvent changer au fil du temps. Imaginez l&#8217;état comme une boîte dans laquelle vous mettez des informations importantes que votre application doit se rappeler, comme le contenu d&#8217;un formulaire ou le nombre d&#8217;éléments dans une liste.</p>\n\n\n\n<p>Le hook useState est la manière la plus simple de gérer l&#8217;état dans un composant fonctionnel. Voici comment il fonctionne :</p>\n\n\n\n<p><strong>Initialisation</strong> : Vous commencez par déclarer une variable d&#8217;état et une fonction pour la mettre à jour. Par exemple, const [count, setCount] = useState(0); crée une variable count initialisée à 0 et une fonction setCount pour la modifier.</p>\n\n\n\n<p><strong>Mise à jour</strong> : Chaque fois que vous appelez setCount avec une nouvelle valeur, React met à jour l&#8217;état et réaffiche le composant avec les nouvelles données.</p>\n\n\n\n<div class=\"wp-block-kevinbatdorf-code-block-pro padding-bottom-disabled\" data-code-block-pro-font-family=\"Code-Pro-Fira-Code\" style=\"font-size:.875rem;font-family:Code-Pro-Fira-Code,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)\"><span style=\"display:block;padding:16px 0 0 16px;margin-bottom:-1px;width:100%;text-align:left;background-color:#232136\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"54\" height=\"14\" viewBox=\"0 0 54 14\"><g fill=\"none\" fill-rule=\"evenodd\" transform=\"translate(1 1)\"><circle cx=\"6\" cy=\"6\" r=\"6\" fill=\"#FF5F56\" stroke=\"#E0443E\" stroke-width=\".5\"></circle><circle cx=\"26\" cy=\"6\" r=\"6\" fill=\"#FFBD2E\" stroke=\"#DEA123\" stroke-width=\".5\"></circle><circle cx=\"46\" cy=\"6\" r=\"6\" fill=\"#27C93F\" stroke=\"#1AAB29\" stroke-width=\".5\"></circle></g></svg></span><span role=\"button\" tabindex=\"0\" data-code=\"import React, { useState } from 'react';\n\nfunction Counter() {\n\n  const [count, setCount] = useState(0);\n\n  return (\n\n    &lt;div&gt;\n\n      &lt;p&gt;Compteur : {count}&lt;/p&gt;\n\n      &lt;button onClick={() =&gt; setCount(count + 1)}&gt;Incrémenter&lt;/button&gt;\n\n    &lt;/div&gt;\n\n  );\n\n}\n\nexport default Counter;\" style=\"color:#e0def4;display:none\" aria-label=\"Copy\" class=\"code-block-pro-copy-button\"><svg xmlns=\"http://www.w3.org/2000/svg\" style=\"width:24px;height:24px\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" stroke-width=\"2\"><path class=\"with-check\" stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M4.5 12.75l6 6 9-13.5\"></path><path class=\"without-check\" stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M16.5 8.25V6a2.25 2.25 0 00-2.25-2.25H6A2.25 2.25 0 003.75 6v8.25A2.25 2.25 0 006 16.5h2.25m8.25-8.25H18a2.25 2.25 0 012.25 2.25V18A2.25 2.25 0 0118 20.25h-7.5A2.25 2.25 0 018.25 18v-1.5m8.25-8.25h-6a2.25 2.25 0 00-2.25 2.25v6\"></path></svg></span><pre class=\"shiki rose-pine-moon\" style=\"background-color: #232136\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #3E8FB0\">import </span><span style=\"color: #E0DEF4; font-style: italic\">React</span><span style=\"color: #908CAA\">,</span><span style=\"color: #3E8FB0\"> </span><span style=\"color: #908CAA\">{</span><span style=\"color: #3E8FB0\"> </span><span style=\"color: #E0DEF4; font-style: italic\">useState</span><span style=\"color: #3E8FB0\"> </span><span style=\"color: #908CAA\">}</span><span style=\"color: #3E8FB0\"> from </span><span style=\"color: #F6C177\">&#39;react&#39;</span><span style=\"color: #908CAA\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #3E8FB0\">function</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #EA9A97\">Counter</span><span style=\"color: #908CAA\">()</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #908CAA\">{</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">  </span><span style=\"color: #3E8FB0\">const</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #908CAA\">[</span><span style=\"color: #E0DEF4; font-style: italic\">count</span><span style=\"color: #908CAA\">,</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #E0DEF4; font-style: italic\">setCount</span><span style=\"color: #908CAA\">]</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #3E8FB0\">=</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #EA9A97\">useState</span><span style=\"color: #E0DEF4\">(</span><span style=\"color: #EA9A97\">0</span><span style=\"color: #E0DEF4\">)</span><span style=\"color: #908CAA\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">  </span><span style=\"color: #3E8FB0\">return</span><span style=\"color: #E0DEF4\"> (</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">    </span><span style=\"color: #6E6A86\">&lt;</span><span style=\"color: #9CCFD8\">div</span><span style=\"color: #6E6A86\">&gt;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">      </span><span style=\"color: #6E6A86\">&lt;</span><span style=\"color: #9CCFD8\">p</span><span style=\"color: #6E6A86\">&gt;</span><span style=\"color: #E0DEF4\">Compteur : </span><span style=\"color: #908CAA\">{</span><span style=\"color: #E0DEF4; font-style: italic\">count</span><span style=\"color: #908CAA\">}</span><span style=\"color: #6E6A86\">&lt;/</span><span style=\"color: #9CCFD8\">p</span><span style=\"color: #6E6A86\">&gt;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">      </span><span style=\"color: #6E6A86\">&lt;</span><span style=\"color: #9CCFD8\">button</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #C4A7E7; font-style: italic\">onClick</span><span style=\"color: #3E8FB0\">=</span><span style=\"color: #908CAA\">{()</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #3E8FB0\">=&gt;</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #EA9A97\">setCount</span><span style=\"color: #E0DEF4\">(</span><span style=\"color: #E0DEF4; font-style: italic\">count</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #3E8FB0\">+</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #EA9A97\">1</span><span style=\"color: #E0DEF4\">)</span><span style=\"color: #908CAA\">}</span><span style=\"color: #6E6A86\">&gt;</span><span style=\"color: #E0DEF4\">Incrémenter</span><span style=\"color: #6E6A86\">&lt;/</span><span style=\"color: #9CCFD8\">button</span><span style=\"color: #6E6A86\">&gt;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">    </span><span style=\"color: #6E6A86\">&lt;/</span><span style=\"color: #9CCFD8\">div</span><span style=\"color: #6E6A86\">&gt;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">  )</span><span style=\"color: #908CAA\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #908CAA\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #3E8FB0\">export default </span><span style=\"color: #E0DEF4; font-style: italic\">Counter</span><span style=\"color: #908CAA\">;</span></span></code></pre><span style=\"display:flex;align-items:flex-end;padding:10px;width:100%;justify-content:flex-end;background-color:#232136;color:#cecbee;font-size:12px;line-height:1;position:relative\">JavaScript</span></div>\n\n\n\n<p>Dans cet exemple, chaque clic sur le bouton augmente le compteur de 1.</p>\n\n\n\n<h2 class=\"wp-block-heading\">2. Gérer l&#8217;État Complex avec useReducer</h2>\n\n\n\n<p>Pour des états plus complexes, comme ceux nécessitant plusieurs actions ou dépendant de l&#8217;état précédent, useReducer est plus adapté. Il fonctionne de manière similaire à useState, mais avec une logique de mise à jour plus structurée.</p>\n\n\n\n<p><strong>Reducer</strong> : Une fonction qui prend l&#8217;état actuel et une action, et retourne le nouvel état.</p>\n\n\n\n<p><strong>Dispatch</strong> : Une fonction qui envoie des actions au reducer pour mettre à jour l&#8217;état.</p>\n\n\n\n<div class=\"wp-block-kevinbatdorf-code-block-pro padding-bottom-disabled\" data-code-block-pro-font-family=\"Code-Pro-Fira-Code\" style=\"font-size:.875rem;font-family:Code-Pro-Fira-Code,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)\"><span style=\"display:block;padding:16px 0 0 16px;margin-bottom:-1px;width:100%;text-align:left;background-color:#232136\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"54\" height=\"14\" viewBox=\"0 0 54 14\"><g fill=\"none\" fill-rule=\"evenodd\" transform=\"translate(1 1)\"><circle cx=\"6\" cy=\"6\" r=\"6\" fill=\"#FF5F56\" stroke=\"#E0443E\" stroke-width=\".5\"></circle><circle cx=\"26\" cy=\"6\" r=\"6\" fill=\"#FFBD2E\" stroke=\"#DEA123\" stroke-width=\".5\"></circle><circle cx=\"46\" cy=\"6\" r=\"6\" fill=\"#27C93F\" stroke=\"#1AAB29\" stroke-width=\".5\"></circle></g></svg></span><span role=\"button\" tabindex=\"0\" data-code=\"import React, { useReducer } from 'react';\n\nconst initialState = { count: 0 };\n\nfunction reducer(state, action) {\n\n  switch (action.type) {\n\n    case 'increment':\n\n      return { count: state.count + 1 };\n\n    case 'decrement':\n\n      return { count: state.count - 1 };\n\n    default:\n\n      throw new Error();\n\n  }\n\n}\n\nfunction Counter() {\n\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  return (\n\n    &lt;div&gt;\n\n      &lt;p&gt;Compteur : {state.count}&lt;/p&gt;\n\n      &lt;button onClick={() =&gt; dispatch({ type: 'increment' })}&gt;Incrémenter&lt;/button&gt;\n\n      &lt;button onClick={() =&gt; dispatch({ type: 'decrement' })}&gt;Décrémenter&lt;/button&gt;\n\n    &lt;/div&gt;\n\n  );\n\n}\n\nexport default Counter;\" style=\"color:#e0def4;display:none\" aria-label=\"Copy\" class=\"code-block-pro-copy-button\"><svg xmlns=\"http://www.w3.org/2000/svg\" style=\"width:24px;height:24px\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" stroke-width=\"2\"><path class=\"with-check\" stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M4.5 12.75l6 6 9-13.5\"></path><path class=\"without-check\" stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M16.5 8.25V6a2.25 2.25 0 00-2.25-2.25H6A2.25 2.25 0 003.75 6v8.25A2.25 2.25 0 006 16.5h2.25m8.25-8.25H18a2.25 2.25 0 012.25 2.25V18A2.25 2.25 0 0118 20.25h-7.5A2.25 2.25 0 018.25 18v-1.5m8.25-8.25h-6a2.25 2.25 0 00-2.25 2.25v6\"></path></svg></span><pre class=\"shiki rose-pine-moon\" style=\"background-color: #232136\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #3E8FB0\">import </span><span style=\"color: #E0DEF4; font-style: italic\">React</span><span style=\"color: #908CAA\">,</span><span style=\"color: #3E8FB0\"> </span><span style=\"color: #908CAA\">{</span><span style=\"color: #3E8FB0\"> </span><span style=\"color: #E0DEF4; font-style: italic\">useReducer</span><span style=\"color: #3E8FB0\"> </span><span style=\"color: #908CAA\">}</span><span style=\"color: #3E8FB0\"> from </span><span style=\"color: #F6C177\">&#39;react&#39;</span><span style=\"color: #908CAA\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #3E8FB0\">const</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #E0DEF4; font-style: italic\">initialState</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #3E8FB0\">=</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #908CAA\">{</span><span style=\"color: #E0DEF4\"> count</span><span style=\"color: #908CAA\">:</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #EA9A97\">0</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #908CAA\">};</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #3E8FB0\">function</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #EA9A97\">reducer</span><span style=\"color: #908CAA\">(</span><span style=\"color: #C4A7E7; font-style: italic\">state</span><span style=\"color: #908CAA\">,</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #C4A7E7; font-style: italic\">action</span><span style=\"color: #908CAA\">)</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #908CAA\">{</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">  </span><span style=\"color: #3E8FB0\">switch</span><span style=\"color: #E0DEF4\"> (</span><span style=\"color: #E0DEF4; font-style: italic\">action</span><span style=\"color: #3E8FB0\">.</span><span style=\"color: #E0DEF4; font-style: italic\">type</span><span style=\"color: #E0DEF4\">) </span><span style=\"color: #908CAA\">{</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">    </span><span style=\"color: #3E8FB0\">case</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #F6C177\">&#39;increment&#39;</span><span style=\"color: #908CAA\">:</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">      </span><span style=\"color: #3E8FB0\">return</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #908CAA\">{</span><span style=\"color: #E0DEF4\"> count</span><span style=\"color: #908CAA\">:</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #E0DEF4; font-style: italic\">state</span><span style=\"color: #3E8FB0\">.</span><span style=\"color: #E0DEF4; font-style: italic\">count</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #3E8FB0\">+</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #EA9A97\">1</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #908CAA\">};</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">    </span><span style=\"color: #3E8FB0\">case</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #F6C177\">&#39;decrement&#39;</span><span style=\"color: #908CAA\">:</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">      </span><span style=\"color: #3E8FB0\">return</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #908CAA\">{</span><span style=\"color: #E0DEF4\"> count</span><span style=\"color: #908CAA\">:</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #E0DEF4; font-style: italic\">state</span><span style=\"color: #3E8FB0\">.</span><span style=\"color: #E0DEF4; font-style: italic\">count</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #3E8FB0\">-</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #EA9A97\">1</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #908CAA\">};</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">    </span><span style=\"color: #3E8FB0\">default</span><span style=\"color: #908CAA\">:</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">      </span><span style=\"color: #3E8FB0\">throw</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #3E8FB0\">new</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #EA9A97\">Error</span><span style=\"color: #E0DEF4\">()</span><span style=\"color: #908CAA\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">  </span><span style=\"color: #908CAA\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #908CAA\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #3E8FB0\">function</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #EA9A97\">Counter</span><span style=\"color: #908CAA\">()</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #908CAA\">{</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">  </span><span style=\"color: #3E8FB0\">const</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #908CAA\">[</span><span style=\"color: #E0DEF4; font-style: italic\">state</span><span style=\"color: #908CAA\">,</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #E0DEF4; font-style: italic\">dispatch</span><span style=\"color: #908CAA\">]</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #3E8FB0\">=</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #EA9A97\">useReducer</span><span style=\"color: #E0DEF4\">(</span><span style=\"color: #E0DEF4; font-style: italic\">reducer</span><span style=\"color: #908CAA\">,</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #E0DEF4; font-style: italic\">initialState</span><span style=\"color: #E0DEF4\">)</span><span style=\"color: #908CAA\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">  </span><span style=\"color: #3E8FB0\">return</span><span style=\"color: #E0DEF4\"> (</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">    </span><span style=\"color: #6E6A86\">&lt;</span><span style=\"color: #9CCFD8\">div</span><span style=\"color: #6E6A86\">&gt;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">      </span><span style=\"color: #6E6A86\">&lt;</span><span style=\"color: #9CCFD8\">p</span><span style=\"color: #6E6A86\">&gt;</span><span style=\"color: #E0DEF4\">Compteur : </span><span style=\"color: #908CAA\">{</span><span style=\"color: #E0DEF4; font-style: italic\">state</span><span style=\"color: #3E8FB0\">.</span><span style=\"color: #E0DEF4; font-style: italic\">count</span><span style=\"color: #908CAA\">}</span><span style=\"color: #6E6A86\">&lt;/</span><span style=\"color: #9CCFD8\">p</span><span style=\"color: #6E6A86\">&gt;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">      </span><span style=\"color: #6E6A86\">&lt;</span><span style=\"color: #9CCFD8\">button</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #C4A7E7; font-style: italic\">onClick</span><span style=\"color: #3E8FB0\">=</span><span style=\"color: #908CAA\">{()</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #3E8FB0\">=&gt;</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #EA9A97\">dispatch</span><span style=\"color: #E0DEF4\">(</span><span style=\"color: #908CAA\">{</span><span style=\"color: #E0DEF4\"> type</span><span style=\"color: #908CAA\">:</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #F6C177\">&#39;increment&#39;</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #908CAA\">}</span><span style=\"color: #E0DEF4\">)</span><span style=\"color: #908CAA\">}</span><span style=\"color: #6E6A86\">&gt;</span><span style=\"color: #E0DEF4\">Incrémenter</span><span style=\"color: #6E6A86\">&lt;/</span><span style=\"color: #9CCFD8\">button</span><span style=\"color: #6E6A86\">&gt;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">      </span><span style=\"color: #6E6A86\">&lt;</span><span style=\"color: #9CCFD8\">button</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #C4A7E7; font-style: italic\">onClick</span><span style=\"color: #3E8FB0\">=</span><span style=\"color: #908CAA\">{()</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #3E8FB0\">=&gt;</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #EA9A97\">dispatch</span><span style=\"color: #E0DEF4\">(</span><span style=\"color: #908CAA\">{</span><span style=\"color: #E0DEF4\"> type</span><span style=\"color: #908CAA\">:</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #F6C177\">&#39;decrement&#39;</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #908CAA\">}</span><span style=\"color: #E0DEF4\">)</span><span style=\"color: #908CAA\">}</span><span style=\"color: #6E6A86\">&gt;</span><span style=\"color: #E0DEF4\">Décrémenter</span><span style=\"color: #6E6A86\">&lt;/</span><span style=\"color: #9CCFD8\">button</span><span style=\"color: #6E6A86\">&gt;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">    </span><span style=\"color: #6E6A86\">&lt;/</span><span style=\"color: #9CCFD8\">div</span><span style=\"color: #6E6A86\">&gt;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">  )</span><span style=\"color: #908CAA\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #908CAA\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #3E8FB0\">export default </span><span style=\"color: #E0DEF4; font-style: italic\">Counter</span><span style=\"color: #908CAA\">;</span></span></code></pre><span style=\"display:flex;align-items:flex-end;padding:10px;width:100%;justify-content:flex-end;background-color:#232136;color:#cecbee;font-size:12px;line-height:1;position:relative\">JavaScript</span></div>\n\n\n\n<p>Dans cet exemple, useReducer permet de gérer plusieurs actions (incrémenter et décrémenter) de manière claire et organisée.</p>\n\n\n\n<h2 class=\"wp-block-heading\">3. Partager l&#8217;État entre Composants avec le Context API</h2>\n\n\n\n<p>Parfois, vous avez besoin de partager des données entre plusieurs composants sans passer explicitement les props à chaque niveau. Le Context API permet de créer un contexte global pour partager des données.</p>\n\n\n\n<p><strong>Créer un contexte</strong> : Utilisez React.createContext() pour créer un contexte.</p>\n\n\n\n<p><strong>Fournir le contexte</strong> : Utilisez le Provider pour rendre les données disponibles aux composants enfants.</p>\n\n\n\n<p><strong>Consommer le contexte </strong>: Utilisez useContext pour accéder aux données dans les composants enfants.</p>\n\n\n\n<div class=\"wp-block-kevinbatdorf-code-block-pro padding-bottom-disabled\" data-code-block-pro-font-family=\"Code-Pro-Fira-Code\" style=\"font-size:.875rem;font-family:Code-Pro-Fira-Code,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)\"><span style=\"display:block;padding:16px 0 0 16px;margin-bottom:-1px;width:100%;text-align:left;background-color:#232136\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"54\" height=\"14\" viewBox=\"0 0 54 14\"><g fill=\"none\" fill-rule=\"evenodd\" transform=\"translate(1 1)\"><circle cx=\"6\" cy=\"6\" r=\"6\" fill=\"#FF5F56\" stroke=\"#E0443E\" stroke-width=\".5\"></circle><circle cx=\"26\" cy=\"6\" r=\"6\" fill=\"#FFBD2E\" stroke=\"#DEA123\" stroke-width=\".5\"></circle><circle cx=\"46\" cy=\"6\" r=\"6\" fill=\"#27C93F\" stroke=\"#1AAB29\" stroke-width=\".5\"></circle></g></svg></span><span role=\"button\" tabindex=\"0\" data-code=\"import React, { useContext, useState, createContext } from 'react';\n\nconst CountContext = createContext();\n\nfunction CountProvider({ children }) {\n\n  const [count, setCount] = useState(0);\n\n  return (\n\n    &lt;CountContext.Provider value={{ count, setCount }}&gt;\n\n      {children}\n\n    &lt;/CountContext.Provider&gt;\n\n  );\n\n}\n\nfunction Counter() {\n\n  const { count, setCount } = useContext(CountContext);\n\n  return (\n\n    &lt;div&gt;\n\n      &lt;p&gt;Compteur : {count}&lt;/p&gt;\n\n      &lt;button onClick={() =&gt; setCount(count + 1)}&gt;Incrémenter&lt;/button&gt;\n\n    &lt;/div&gt;\n\n  );\n\n}\n\nfunction App() {\n\n  return (\n\n    &lt;CountProvider&gt;\n\n      &lt;Counter /&gt;\n\n    &lt;/CountProvider&gt;\n\n  );\n\n}\n\nexport default App;\" style=\"color:#e0def4;display:none\" aria-label=\"Copy\" class=\"code-block-pro-copy-button\"><svg xmlns=\"http://www.w3.org/2000/svg\" style=\"width:24px;height:24px\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" stroke-width=\"2\"><path class=\"with-check\" stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M4.5 12.75l6 6 9-13.5\"></path><path class=\"without-check\" stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M16.5 8.25V6a2.25 2.25 0 00-2.25-2.25H6A2.25 2.25 0 003.75 6v8.25A2.25 2.25 0 006 16.5h2.25m8.25-8.25H18a2.25 2.25 0 012.25 2.25V18A2.25 2.25 0 0118 20.25h-7.5A2.25 2.25 0 018.25 18v-1.5m8.25-8.25h-6a2.25 2.25 0 00-2.25 2.25v6\"></path></svg></span><pre class=\"shiki rose-pine-moon\" style=\"background-color: #232136\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #3E8FB0\">import </span><span style=\"color: #E0DEF4; font-style: italic\">React</span><span style=\"color: #908CAA\">,</span><span style=\"color: #3E8FB0\"> </span><span style=\"color: #908CAA\">{</span><span style=\"color: #3E8FB0\"> </span><span style=\"color: #E0DEF4; font-style: italic\">useContext</span><span style=\"color: #908CAA\">,</span><span style=\"color: #3E8FB0\"> </span><span style=\"color: #E0DEF4; font-style: italic\">useState</span><span style=\"color: #908CAA\">,</span><span style=\"color: #3E8FB0\"> </span><span style=\"color: #E0DEF4; font-style: italic\">createContext</span><span style=\"color: #3E8FB0\"> </span><span style=\"color: #908CAA\">}</span><span style=\"color: #3E8FB0\"> from </span><span style=\"color: #F6C177\">&#39;react&#39;</span><span style=\"color: #908CAA\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #3E8FB0\">const</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #E0DEF4; font-style: italic\">CountContext</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #3E8FB0\">=</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #EA9A97\">createContext</span><span style=\"color: #E0DEF4\">()</span><span style=\"color: #908CAA\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #3E8FB0\">function</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #EA9A97\">CountProvider</span><span style=\"color: #908CAA\">({</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #C4A7E7; font-style: italic\">children</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #908CAA\">})</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #908CAA\">{</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">  </span><span style=\"color: #3E8FB0\">const</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #908CAA\">[</span><span style=\"color: #E0DEF4; font-style: italic\">count</span><span style=\"color: #908CAA\">,</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #E0DEF4; font-style: italic\">setCount</span><span style=\"color: #908CAA\">]</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #3E8FB0\">=</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #EA9A97\">useState</span><span style=\"color: #E0DEF4\">(</span><span style=\"color: #EA9A97\">0</span><span style=\"color: #E0DEF4\">)</span><span style=\"color: #908CAA\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">  </span><span style=\"color: #3E8FB0\">return</span><span style=\"color: #E0DEF4\"> (</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">    </span><span style=\"color: #6E6A86\">&lt;</span><span style=\"color: #9CCFD8\">CountContext.Provider</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #C4A7E7; font-style: italic\">value</span><span style=\"color: #3E8FB0\">=</span><span style=\"color: #908CAA\">{{</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #E0DEF4; font-style: italic\">count</span><span style=\"color: #908CAA\">,</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #E0DEF4; font-style: italic\">setCount</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #908CAA\">}}</span><span style=\"color: #6E6A86\">&gt;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">      </span><span style=\"color: #908CAA\">{</span><span style=\"color: #E0DEF4; font-style: italic\">children</span><span style=\"color: #908CAA\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">    </span><span style=\"color: #6E6A86\">&lt;/</span><span style=\"color: #9CCFD8\">CountContext.Provider</span><span style=\"color: #6E6A86\">&gt;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">  )</span><span style=\"color: #908CAA\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #908CAA\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #3E8FB0\">function</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #EA9A97\">Counter</span><span style=\"color: #908CAA\">()</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #908CAA\">{</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">  </span><span style=\"color: #3E8FB0\">const</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #908CAA\">{</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #E0DEF4; font-style: italic\">count</span><span style=\"color: #908CAA\">,</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #E0DEF4; font-style: italic\">setCount</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #908CAA\">}</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #3E8FB0\">=</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #EA9A97\">useContext</span><span style=\"color: #E0DEF4\">(</span><span style=\"color: #E0DEF4; font-style: italic\">CountContext</span><span style=\"color: #E0DEF4\">)</span><span style=\"color: #908CAA\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">  </span><span style=\"color: #3E8FB0\">return</span><span style=\"color: #E0DEF4\"> (</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">    </span><span style=\"color: #6E6A86\">&lt;</span><span style=\"color: #9CCFD8\">div</span><span style=\"color: #6E6A86\">&gt;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">      </span><span style=\"color: #6E6A86\">&lt;</span><span style=\"color: #9CCFD8\">p</span><span style=\"color: #6E6A86\">&gt;</span><span style=\"color: #E0DEF4\">Compteur : </span><span style=\"color: #908CAA\">{</span><span style=\"color: #E0DEF4; font-style: italic\">count</span><span style=\"color: #908CAA\">}</span><span style=\"color: #6E6A86\">&lt;/</span><span style=\"color: #9CCFD8\">p</span><span style=\"color: #6E6A86\">&gt;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">      </span><span style=\"color: #6E6A86\">&lt;</span><span style=\"color: #9CCFD8\">button</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #C4A7E7; font-style: italic\">onClick</span><span style=\"color: #3E8FB0\">=</span><span style=\"color: #908CAA\">{()</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #3E8FB0\">=&gt;</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #EA9A97\">setCount</span><span style=\"color: #E0DEF4\">(</span><span style=\"color: #E0DEF4; font-style: italic\">count</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #3E8FB0\">+</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #EA9A97\">1</span><span style=\"color: #E0DEF4\">)</span><span style=\"color: #908CAA\">}</span><span style=\"color: #6E6A86\">&gt;</span><span style=\"color: #E0DEF4\">Incrémenter</span><span style=\"color: #6E6A86\">&lt;/</span><span style=\"color: #9CCFD8\">button</span><span style=\"color: #6E6A86\">&gt;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">    </span><span style=\"color: #6E6A86\">&lt;/</span><span style=\"color: #9CCFD8\">div</span><span style=\"color: #6E6A86\">&gt;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">  )</span><span style=\"color: #908CAA\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #908CAA\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #3E8FB0\">function</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #EA9A97\">App</span><span style=\"color: #908CAA\">()</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #908CAA\">{</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">  </span><span style=\"color: #3E8FB0\">return</span><span style=\"color: #E0DEF4\"> (</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">    </span><span style=\"color: #6E6A86\">&lt;</span><span style=\"color: #9CCFD8\">CountProvider</span><span style=\"color: #6E6A86\">&gt;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">      </span><span style=\"color: #6E6A86\">&lt;</span><span style=\"color: #9CCFD8\">Counter</span><span style=\"color: #E0DEF4\"> </span><span style=\"color: #6E6A86\">/&gt;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">    </span><span style=\"color: #6E6A86\">&lt;/</span><span style=\"color: #9CCFD8\">CountProvider</span><span style=\"color: #6E6A86\">&gt;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E0DEF4\">  )</span><span style=\"color: #908CAA\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #908CAA\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #3E8FB0\">export default </span><span style=\"color: #E0DEF4; font-style: italic\">App</span><span style=\"color: #908CAA\">;</span></span></code></pre><span style=\"display:flex;align-items:flex-end;padding:10px;width:100%;justify-content:flex-end;background-color:#232136;color:#cecbee;font-size:12px;line-height:1;position:relative\">JavaScript</span></div>\n\n\n\n<p>Dans cet exemple, le contexte CountContext permet de partager l&#8217;état count entre plusieurs composants sans passer de props.</p>\n\n\n\n<h2 class=\"wp-block-heading\">4. Conclusion</h2>\n\n\n\n<p>Gérer l&#8217;état dans React peut sembler complexe au début, mais avec <strong>useState</strong>, <strong>useReducer</strong>, et le <strong>Context API</strong>, vous disposez d&#8217;outils puissants pour gérer des états simples et complexes, ainsi que pour partager des données entre composants. En comprenant ces concepts, vous pouvez créer des applications React plus robustes et maintenables.</p>\n\n\n\n<p>Que vous soyez débutant en React ou que vous cherchiez à approfondir vos connaissances, maîtriser la gestion de l&#8217;état est essentiel pour développer des applications dynamiques et interactives.</p>\n","seo":{"metaDesc":"Découvrez comment gérer l'état dans React avec useState, useReducer et le Context API. Apprenez à manipuler l'état simple et complexe et à partager des données entre composants.","metaKeywords":"","title":"Guide sur la gestion d'état dans React"},"date":"24/02/2025","author":{"node":{"name":"marconte","avatar":{"url":"https://secure.gravatar.com/avatar/77dbfdb8c6074dea98c2020e75119fde?s=96&r=g","size":96}}},"categories":{"nodes":[{"name":"Développement","slug":"dev"}]}}},"pageContext":{"id":"cG9zdDo3MTc="}},"staticQueryHashes":["1501292360","1815691534","1881416530","592897047"],"slicesMap":{}}